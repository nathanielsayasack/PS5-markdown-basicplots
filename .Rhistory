## What was average LE in 'Europe & Central Asia' in 1960?
mean(life_expectancy$le_1960[life_expectancy$region == "Europe & Central Asia"])
## How much did LE improve in "South Asia" in average?
mean(life_expectancy$difference_LE[life_expectancy$region == "South Asia"])
## write a function 'regionChange' that takes
## the name of a region as argument, and returns average LE
## in that region (as of 2013)
## Show that it works for 'Europe & Central Asia'
regionChange <- function(region){
return (mean(life_expectancy$le_2013[life_expectancy$region == region]))
}
regionChange("Europe & Central Asia")
## Write a loop over all regions and print the region name
## together with the average life expectancy there.
for (region_name in unique(life_expectancy$region)){
cat(region_name,"average life expectancy:", regionChange(region_name), "\n")
}
## Demonstrate that your function works correctly using the
## China/Bolivia example
## Compare the LE changes of a few more pairs of countries
## at your choice.
## Save your life expectancy data to a new .csv file
## in the data/ directory
## with the filename `life-expectancy-with-change.csv`.
## use _relative path_ !
## ---------- challenge
## Create a *well labeled* plot (readable title, x-axis, y-axis) showing Life expectancy
## in 1960 v.s. Change in life expectancy Programmatically save (i.e., with code, not
## using the Export button) your graph as a .png file in your repo Then, in a comment
## below, provide an *interpretation* of the relationship you observe Feel free to use
## any library of your choice, or base R plotting functions.
## What do you notice?
## What is your interpretation of the observed relationship?
##
## We see a negative relationship
## Interpretation: this is global convergence in life expectancy.
## countries with a higher life expectancy in 1960 had a lower
## Change in life expectancy.  Perhaps humans can't live that long
## (or it's easier increase life expectancy from 50 to 70 than 70 to 90)
## Write a function `compareChange` that takes in two country
## names as parameters, and
## prints (not returns) a sentence that describes which country had
## a larger gain in LE (and by how many years).
## For example, if you passed the values "China",
## and "Bolivia" into your function, it would print this:
##
## Out of China and Bolivia, China gained 7.4 years more in
## life expectancy (31.9 and 24.5 years respectively).
##
## Make sure to round your numbers: check out function `round()`
## Demonstrate that your function works correctly using the
## China/Bolivia example
## Compare the LE changes of a few more pairs of countries
## at your choice.
### ========== a3-data ==========
## Before you get started, make sure to set you are in the right working directory.
## Print your working directory (in R, not in shell!) here.
## -------------------- create your own data! --------------------
## Here your task is to create a dataset of student grades,
## and do some related computeations
## ---------- create data
## Create a vector `names` with (at least) 5 names in it
names <- c("Liam","Olivia","Noah","Emma","Oliver")
print(names)
## Create a vector `math` with grades (0 - 100)
math <- c("66","57","69","100","85")
## in a math course, one grade for each student.
## Hint: you can just invent these numbers, but you can also
## create random data, e.g. by `sample(100, 5, replace=TRUE)`
## (Check out documentation yourself).
## Create a vector `japanese` with grades for the Japanese course
## (use different numbers, not exactly the same as for math)
japanese <- c("76","52","98","83","82")
## Create a similar vector 'dance' with grades for a dance class
dance <- c("72","88","67","92","77")
## Create a data frame `grades` by combining your
## names, and math, Japanese and dance grades
grades <- data.frame(names, math, japanese, dance)
## Compute the number of students in your data
grades$names
nrow(grades)
## Compute number of courses in data--
ncol(grades)
## number columns in your data minus one
## (b/c of their names)
ncol(grades)-1
## Print the last two lines of your data
tail(grades,2)
## Save your students to a new .csv file inside your data/
## directory with the filename `grades.csv`.
## You can save either as comma-separated or as tab-separated.
## We recommend to use `write_tsv` and `write_csv` functions
## from readr library.
## use _relative path_ for saving!
library(readr)
write_csv("info201/info201-lab01-winter/PS/ps3-data-nathanielsayasack/data/grades.csv")
## ---------- data manipulations
## Compute GPA (math + Japanese + dance)/3 for each student
## Use vectorized operations, not loops!
## Save it as variable 'gpa' in your data frame.
gpa <- (grades$japanese + grades$math + grades$dance)/3
gpa
## Who has the best GPA?  Print that line of your data!
## Now print only the best student's name
## Now print your data.  Did you get the name right?
## Compute variable that is TRUE/FALSE,
## depending on if the student better at math than in Japanese
## Pick a suitable variable name yourself.
## Show three lines of your data that includes the new variable.
## How many students are there in your data who are better at math
## than in Japanese?
## ---------- Indirect variable names
## create a variable 'col' that contains name of one of the courses
## -- dance.
col <- "dance"
## Print your dance grades using the variable 'col'.
## Do not use the word "dance" here!
grades[[col]]
## Now assign name of another course to 'col' and print
## the best grade in that course!
col <- japanese
max(japanese)
## Now write a for-loop over all columns in the data frame
## Inside of the loop, print the name of the variable,
## and its average value
## Hint: you cannot compute average 'name', add an if-else
## statement there that checks if variable is numeric and only print
## average if it is (check out `is.numeric()`).
for(x in grades){
if(is.numeric(x)){
print(mean(x))
}
else{
print(x)
}
}
### ------------------------------ Life expectancy ------------------------------
## In this section, we'll read in a .csv file, which is essentially a tabular row/column layout
## The .csv file we'll be working with has the life expectancy for each country in 1960 and 2013.
## We'll ask real-world questions about the data by writing the code that answers our question.
## Here are the steps you should walk through:
## ---------- loading data
## Using the `read_csv` function in 'readr' package,
## read the file life-expectancy.csv
## into R.  Assign it to a suitably named variable.
## Use _relative path_ for loading it!
library(readr)
life_expectancy <- read_csv("info201/info201-lab01-winter/PS/ps3-data-nathanielsayasack/data/life-expectancy.csv")
## Determine that the results is a data.frame by using the
## 'is.data.frame' function.
is.data.frame(life_expectancy)
## ---------- inspecting data
## How many rows and columns does the dataset contain?
dim(life_expectancy)
## Print a few first lines of data.
head(life_expectancy, 7)
## Print a few last lines of data.
tail(life_expectancy, 7)
## The lines your printed should look like a dataset
## with text, numbers, and maybe a few missing values.
## It should not look carbled or empty
## Do the printed look good?  (answer in comments)
## Yes, it looks good
## ---------- analyzing data
## Create a new suitably named variable in the dataset--
## the difference in life expectancy (LE) between 2013 and 1960
life_expectancy$difference_LE <- life_expectancy$le_2013 - life_expectancy$le_1960
## What is the average improvement in LE over
## these years?
mean(life_expectancy$difference_LE)
## Which country gained most in terms of LE?
print(life_expectancy[which.max(life_expectancy$difference_LE),])
## How many countries were there where LE
## improved less than 5 years?
sum(life_expectancy$difference_LE<5, na.rm=TRUE)
## How many countries were there were LE decreased
## over this time period?
sum(life_expectancy$difference_LE<0, na.rm=TRUE)
## Write a function `countryChange` that takes in a country's
## name as argument,
## and returns it's change in LE from 1960 to 2013
countryChange <- function(y){
return(life_expectancy[life_expectancy$country == y, "difference_LE"])
}
## Using your function, show how much did LE improve in
## Sweden, Yemen, Pakistan.
countryChange("Sweden")
countryChange("Yemen, Rep.")
countryChange("Pakistan")
## How many regions are there in data?  Which regions are those?
cat("There are ", length(unique(life_expectancy$region)),"regions in the data.","\n")
unique(life_expectancy$region)
## What was average LE in 'Europe & Central Asia' in 1960?
mean(life_expectancy$le_1960[life_expectancy$region == "Europe & Central Asia"])
## How much did LE improve in "South Asia" in average?
mean(life_expectancy$difference_LE[life_expectancy$region == "South Asia"])
## write a function 'regionChange' that takes
## the name of a region as argument, and returns average LE
## in that region (as of 2013)
## Show that it works for 'Europe & Central Asia'
regionChange <- function(region){
return (mean(life_expectancy$le_2013[life_expectancy$region == region]))
}
regionChange("Europe & Central Asia")
## Write a loop over all regions and print the region name
## together with the average life expectancy there.
for (region_name in unique(life_expectancy$region)){
cat(region_name,"average life expectancy:", regionChange(region_name), "\n")
}
## Demonstrate that your function works correctly using the
## China/Bolivia example
## Compare the LE changes of a few more pairs of countries
## at your choice.
## Save your life expectancy data to a new .csv file
## in the data/ directory
## with the filename `life-expectancy-with-change.csv`.
## use _relative path_ !
## ---------- challenge
## Create a *well labeled* plot (readable title, x-axis, y-axis) showing Life expectancy
## in 1960 v.s. Change in life expectancy Programmatically save (i.e., with code, not
## using the Export button) your graph as a .png file in your repo Then, in a comment
## below, provide an *interpretation* of the relationship you observe Feel free to use
## any library of your choice, or base R plotting functions.
## What do you notice?
## What is your interpretation of the observed relationship?
##
## We see a negative relationship
## Interpretation: this is global convergence in life expectancy.
## countries with a higher life expectancy in 1960 had a lower
## Change in life expectancy.  Perhaps humans can't live that long
## (or it's easier increase life expectancy from 50 to 70 than 70 to 90)
## Write a function `compareChange` that takes in two country
## names as parameters, and
## prints (not returns) a sentence that describes which country had
## a larger gain in LE (and by how many years).
## For example, if you passed the values "China",
## and "Bolivia" into your function, it would print this:
##
## Out of China and Bolivia, China gained 7.4 years more in
## life expectancy (31.9 and 24.5 years respectively).
##
## Make sure to round your numbers: check out function `round()`
## Demonstrate that your function works correctly using the
## China/Bolivia example
## Compare the LE changes of a few more pairs of countries
## at your choice.
cat("There are ", length(unique(life_expectancy$region)),"regions in the data.","\n")
unique(life_expectancy$region)
nyc_data %>%
summarise(dest == TRUE) %>%
count()
setwd("~/info201/info201-lab01-winter/PS/PS5-markdown-basicplots")
--
output: html_document
---
```{r}
library(tidyverse)
library(dplyr)
```
## Part 1: Load and check data
1. (1pt) For solving the problems, and answering the questions, create a new rmarkdown document with an appropriate title.
created a newmarkdown file
2. (2pt) Load data. How many rows/columns do we have?
```{r}
gapminder <- read_delim("gapminder.csv")
dim(gapminder)
```
3. (2pt) Print a small sample of data. Does it look OK?
```{r}
gapminder %>%
sample_n(9)
```
## Part 2: Descriptive Statistics
1. (3pt) How many countries are there in the dataset? Analyze all three: iso3, iso2 and name
```{r}
gapminder %>%
group_by(name) %>%
filter(!is.na(name)) %>%
summarise(n = n_distinct(name)) %>%
arrange(desc(n))
```
There are 249 unique country names
```{r}
gapminder %>%
group_by(iso2) %>%
filter(!is.na(iso2)) %>%
summarise(n=n_distinct(iso2)) %>%
arrange(desc(n))
```
There are 248 unique country iso2 codes
```{r}
gapminder %>%
group_by(iso3) %>%
filter(!is.na(iso3)) %>%
summarise(n=n_distinct(iso3)) %>%
arrange(desc(n))
```
There are 253 unique country iso3 codes
2. If you did this correctly, you saw that there are more names than iso-2 codes, and there are
even more iso3 -codes. What is going on? Can you find it out?
(a) (5pt) Find how many names are there for each iso-2 code. Are there any iso-2 codes that
correspond to more than one name? What are these countries?
```{r}
gapminder %>%
group_by(name) %>%
filter(is.na(iso2)) %>%
summarize(n = n_distinct(iso2)) %>%
arrange(desc(n))
```
Namibia does not have an iso2 code and there is another country that does not have a country name, just NA
(b) (5pt) Now repeat the same for name and iso3-code. Are there country names that have
more than one iso3-code? What are these countries?
Hint: two of these entitites are CHANISL and NLD CURACAO.
```{r}
gapminder %>%
group_by(iso3) %>%
filter(is.na(name)) %>%
summarize(n = n_distinct(name)) %>%
arrange(desc(n))
```
CHANISL, GBM, KOS, and NLD_CURACAO have iso3 codes but they don't have a name
3. (2pt) What is the minimum and maximum year in these data?
```{r}
min(gm$time, na.rm = TRUE)
max(gm$time, na.rm = TRUE)
```
1960 is the minimum year and 2019 is the maximum year.
## Part 3: CO2 emissions
1. (2pt) How many missing co2 emissions are there for each year? Analyze both missing CO2
and co2_PC. Which years have most missing data?
```{r}
gapminder %>%
filter(is.na(co2_PC), is.na(co2)) %>%
group_by(time) %>%
summarise(years = n()) %>%
arrange(desc(years))
```
2017, 2018, and, 2019 have the most missing co2 emissions.
2. (5pt) Make a plot of total CO2 emissions over time for the U.S, China, and India. Add a few
more countries of your choice. Explain what do you see.
```{r}
gm %>%
filter(iso3 ==c("USA","CHN","IND","VNM", "UKR")) %>%
ggplot() +
geom_line(aes(x=time,y=co2,col=iso3)) +
geom_point(aes(x=time,y=co2,col=iso3))
```
I notice that countries that are more developed have more CO2 emissions. Countries like Ukraine, Vietnam, and India have less CO2 emissions when compared to the US and China.
3. (5pt) Now let’s analyze the CO2 emissions per capita (co2_PC). Make a similar plot of the
same countries. What does this figure suggest?
```{r}
gm %>%
filter(iso3 ==c("USA","CHN","IND","VNM", "UKR")) %>%
ggplot() +
geom_line(aes(x=time,y=co2_PC,col=iso3)) +
geom_point(aes(x=time,y=co2_PC,col=iso3))
```
This chart indicates that the United States is by far the top in CO2 emissions per capita. All other countries are at the bottom of the graph. This might be due to the fact that the United States is substantially more developed than the other countries listed.
4. (6pt) Compute average CO2 emissions per capita across the continents (assume region is the
same as continent). Comment what do you see
Note: just compute averages over countries and ignore the fact that countries are of different
size.
Hint: Americas 2016 should be 4.80.
Here are the average CO2 emissions per capita in the year 2016.
```{r}
gapm %>%
group_by(region) %>%
filter(!is.na(co2_PC), !is.na(region), time == 2016) %>%
summarise(mean = mean(co2_PC)) %>%
arrange(desc(mean))
```
The average CO2 emissions per capita for all time
```{r}
gapminder %>%
group_by(region) %>%
filter(!is.na(co2_PC), !is.na(region)) %>%
summarise(mean = mean(co2_PC)) %>%
arrange(desc(mean))
```
5. (7pt) Make a barplot where you show the previous results–average CO2 emissions per capita
across continents in 1960 and 2016.
```{r}
gapminder %>%
filter(time %in% c(1960, 2016), !is.na(region), !is.na(co2_PC)) %>%
group_by(time, region) %>%
summarise(avg_co2PC = mean(co2_PC)) %>%
ggplot(aes(x=region,y=avg_co2PC, fill=as.factor(time))) +
geom_col(position = "dodge") +
labs(title = "Average CO2 emissions per capita (year and region)",
x="Region",
y="Average co2 emissions per capita") +
scale_fill_discrete(name= "Year")
```
6. Which countries are the three largest, and three smallest CO2 emitters (in terms of CO2 per
capita) in 2019 for each continent? (Assume region is continent).
I used the 2016 DATA
3 smallest
```{r}
gapminder %>%
filter(time == "2016", !is.na(region), !is.na(co2_PC)) %>%
group_by(region) %>%
arrange(co2_PC) %>%
slice_head(n=3) %>%
select(region, name, co2_PC)
```
3 largest
```{r}
gapminder %>%
filter(time == "2016", !is.na(region), !is.na(co2_PC)) %>%
group_by(region) %>%
arrange(co2_PC) %>%
slice_tail(n=3) %>%
select(region, name, co2_PC)
```
## Part 4: GDP per capita
1. (8pt) Make a scatterplot of GDP per capita versus life expectancy by country, using data for 1960.
Make the point size dependent on the country size, and color those according to the continent.
Feel free to adjust the plot in other ways to make it better.
```{r}
gapminder %>%
filter(time == 1960, !is.na(region)) %>%
ggplot(aes(x=GDP_PC,y=lifeExpectancy,col=region,size=totalPopulation)) +
geom_point()
```
2. (4pt) Make a similar plot, but this time use 2019 data only.
```{r}
gapminder %>%
filter(time == 2019, !is.na(region)) %>%
ggplot(aes(x=GDP_PC,y=lifeExpectancy,col=region,size=totalPopulation)) +
geom_point()
```
3. (6pt) Compare these two plots and comment what do you see. How has world developed
through the last 60 years?
During the last 60 years, all countries' GDP per capita and life expectancy have grown.
These factors tend to be linked to some extent, since a higher GDP per capita corresponds to a longer life expectancy. Yet, the rewards on GDP per capita and life expectancy are falling.
4. (6pt) Compute the average life expectancy for each continent in 1960 and 2019. Do the results
fit with what do you see on the figures?
```{r}
gapminder %>%
filter(!is.na(region), !is.na(lifeExpectancy), !is.na(time)) %>%
filter(time %in% c("1960","2019")) %>%
group_by(region, time) %>%
summarize(average = mean(lifeExpectancy))
```
Yeah, the findings in terms of life expectancy typically agree with the nations from the regions.
5. (8pt) Compute the average LE growth from 1960-2019 across the continents. Show the results
in the order of growth. Explain what do you see.
```{r}
gapminder %>%
filter(!is.na(region), !is.na(lifeExpectancy), !is.na(time)) %>%
filter(time %in% c("1960","2019")) %>%
group_by(region, time) %>%
summarize(average = mean(lifeExpectancy)) %>%
mutate(prev = lag(average), growth = average - prev) %>%
filter(!is.na(growth)) %>%
arrange(desc(growth))
```
Continents with a large number of developing nations have experienced a bigger increase in life expectancy, whereas continents with a large number of industrialized countries have seen a smaller increase in life expectancy. Several African and Asian countries, for example, are still underdeveloped, contributing to the region's high growth in life expectancy, whereas European countries have been developed for a long time, as seen by their low increase in life expectancy.
6. (6pt) Show the histogram of GDP per capita for years of 1960 and 2019. Try to put both
histograms on the same graph, see how well you can do it!
```{r}
gapminder %>%
filter(time %in% c(1960, 2019), !is.na(GDP_PC)) %>%
ggplot(aes(x=GDP_PC, fill = factor(time))) +
geom_histogram(alpha = 0.5, position = "dodge", bins = 30) +
scale_fill_manual(values = c("red", "blue"), labels = c("1960" , "2019")) +
labs(x = "GDP per capita", y= "Count", title = "GDP per capita for 1960 and 2019")
```
7. (6pt) What was the ranking of US in terms of life expectancy in 1960 and in 2019? (When
counting from top.)
Hint: check out the function rank()!
Hint2: 17 for 1960.
1960 life expectancy rank
```{r}
gapminder %>%
filter(time == "1960", !is.na(lifeExpectancy), !is.na(region)) %>%
mutate(rank = rank(-lifeExpectancy)) %>%
filter(name == "United States of America") %>%
select(rank)
```
2019 life expectancy rank
```{r}
gapminder %>%
filter(time == "2019", !is.na(lifeExpectancy), !is.na(region)) %>%
mutate(rank = rank(-lifeExpectancy)) %>%
filter(name == "United States of America") %>%
select(rank)
```
8. (6pt) If you did this correctly, then you noticed that US ranking has been falling quite a
bit. But we also have more countries in 2019–what about the relative rank divided by the
corresponding number of countries that have LE data in the corresponding year?
Hint: 0.0904 for 1960.
1960 relative rank
```{r}
gapmimnder %>%
filter(!is.na(lifeExpectancy), time == "1960", !is.na(region)) %>%
mutate(rank = rank(-lifeExpectancy), number_country = n(), relativerank = rank/number_country) %>%
select(name, rank, number_country, relativerank) %>%
filter(name == "United States of America") %>%
select(relativerank)
```
2019 relative rank
```{r}
gapminder %>%
filter(!is.na(lifeExpectancy), time == "2019", !is.na(region)) %>%
mutate(rank = rank(-lifeExpectancy), number_country = n(), relativerank = rank/number_country) %>%
select(name, rank, number_country, relativerank) %>%
filter(name == "United States of America") %>%
select(relativerank)
```
Finally tell us how many hours did you spend on this PS.
I spend 12 hours on this problem set
